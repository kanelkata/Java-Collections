import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;


public class Pr11_MostFrequentWord {

	/**
	 * Write a program to find the most frequent word in a text and print it, as well as how many times it appears 
	 * in format "word -> count". Consider any non-letter character as a word separator. Ignore the character casing. 
	 * If several words have the same maximal frequency, print all of them in alphabetical order.
	 */

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		String text = scan.nextLine().toLowerCase();
		String[] words = text.split("[ .,:;?!'-]+");
		Arrays.sort(words);
		int count = 1;
		int countToSave = 0;
		ArrayList<Integer> saveCount = new ArrayList<Integer>();
		ArrayList<Integer> savePosition = new ArrayList<Integer>();
		
		for (int i = 1; i < words.length; i++) {
			if (words[i].equals(words[i - 1])) {
				count++;
			}
			else {
				if (count >= countToSave) {
					saveCount.add(count);
					countToSave = count;
					savePosition.add(i);
					
					count = 0;
				}
				count = 0;
			}
		}
		saveCount.contains("hi");
		Arrays.sort(saveCount.toArray());
		int[] ints = new int[savePosition.size()];
	    int j = 0;
	    for (Integer n : savePosition) {
	        ints[j++] = n;
	    };
	    int[] ints2 = new int[savePosition.size()];
	    int m = 0;
	    for (Integer n : savePosition) {
	        ints2[m++] = n;
	    };
		for (int i = 0; i < saveCount.toArray().length; i++) {			
			System.out.println(words[ints[i]] + " -> " + ints[i] + " times" );
		}

	}

}
